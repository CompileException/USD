mdl 1.5;

import ::base::mono_mode;
import ::base::texture_return;
import ::nvidia::test_types::diffuse;
import ::nvidia::test_types::dummy_float_function;
import ::nvidia::test_types::example_struct;
import ::nvidia::test_types::file_texture;
import ::nvidia::test_types::material_type;
import ::nvidia::test_types::perlin_noise_bump_texture;
import ::state::normal;
import ::tex::gamma_mode;

export material diffuse()
 = 
    let {
        bool tmp0 = false;
        int tmp1 = 1;
        ::nvidia::test_types::material_type tmp2 = ::nvidia::test_types::complex_material;
        float tmp3 = 1.23399997f;
        double tmp4 = 3.1400001049041748d;
        string tmp5 = "Test string foobar";
        color tmp6 = color(0.800000012f, 0.800000012f, 0.800000012f);
        texture_2d tmp7 = texture_2d("" /* tag 2017, version 3779539348 */, ::tex::gamma_default);
        bool2 tmp8 = bool2(true, false);
        bool3 tmp9 = bool3(true);
        bool4 tmp10 = bool4(true);
        int2 tmp11 = int2(1, 2);
        int3 tmp12 = int3(3);
        int4 tmp13 = int4(4);
        float2 tmp14 = float2(1.f, 2.f);
        float3 tmp15 = float3(3.f);
        float4 tmp16 = float4(4.f);
        double2 tmp17 = double2(1.d, 2.d);
        double3 tmp18 = double3(3.d);
        double4 tmp19 = double4(4.d);
        float2x2 tmp20 = float2x2(float2(1.f, 2.f), float2(3.f, 4.f));
        float3x3 tmp21 = float3x3(1.f);
        float4x4 tmp22 = float4x4(2.f);
        float3x2 tmp23 = float3x2(1.f);
        double2x2 tmp24 = double2x2(double2(2.d), double2(2.d));
        double3x3 tmp25 = double3x3(double3(2.d), double3(2.d), double3(2.d));
        double4x4 tmp26 = double4x4(double4(2.d), double4(2.d), double4(2.d), double4(2.d));
        bool[4] tmp27 = bool[](true, false, true, false);
        int[4] tmp28 = int[](1, 2, 3, 4);
        float[4] tmp29 = float[](1.f, 2.f, 3.f, 4.f);
        double[4] tmp30 = double[](1.d, 2.d, 3.d, 4.d);
        string[4] tmp31 = string[]("1.0", "2.0", "3.0", "4.0");
        color[4] tmp32 = color[](color(0.800000012f, 0.800000012f, 0.800000012f), color(0.800000012f, 0.800000012f, 0.800000012f), color(0.800000012f, 0.800000012f, 0.800000012f), color(0.800000012f, 0.800000012f, 0.800000012f));
        bool2[2] tmp33 = bool2[](bool2(true, false), bool2(false, true));
        bool3[2] tmp34 = bool3[](bool3(true, false, false), bool3(false, true, true));
        bool4[2] tmp35 = bool4[](bool4(true, false, false, false), bool4(false, true, true, true));
        int2[2] tmp36 = int2[](int2(4), int2(4));
        int3[2] tmp37 = int3[](int3(6), int3(6));
        int4[2] tmp38 = int4[](int4(8), int4(8));
        float2[3] tmp39 = float2[](float2(6.f), float2(6.f), float2(6.f));
        float3[3] tmp40 = float3[](float3(6.5f), float3(6.5f), float3(6.5f));
        float4[3] tmp41 = float4[](float4(6.5999999f), float4(6.5999999f), float4(6.5999999f));
        double2[2] tmp42 = double2[](double2(8.d), double2(8.d));
        double3[2] tmp43 = double3[](double3(9.d), double3(9.d));
        double4[2] tmp44 = double4[](double4(10.d), double4(10.d));
        ::base::texture_return tmp45 = ::nvidia::test_types::file_texture(texture_2d("" /* tag 2012, version 2244438529 */, ::tex::gamma_default), ::base::mono_average, 1.f, 1.f, float2(1.f), float2(0.f), 0.f, false, 0, false);
        float3 tmp46 = ::nvidia::test_types::perlin_noise_bump_texture(::nvidia::test_types::dummy_float_function(), float3(10.f), 1, true, false, 1.f, 0.f, float3(0.f), float3(0.f), 0);
        ::nvidia::test_types::example_struct tmp47 = ::nvidia::test_types::example_struct(param_int: 1, param_float: 1.f);
        float3 tmp48 = ::state::normal();
    } in
        ::nvidia::test_types::diffuse(
            test_bool: tmp0,
            test_int: tmp1,
            test_enum: tmp2,
            roughness: tmp3,
            test_double: tmp4,
            test_string: tmp5,
            diffuse_color: tmp6,
            test_texture: tmp7,
            test_bool2: tmp8,
            test_bool3: tmp9,
            test_bool4: tmp10,
            test_int2: tmp11,
            test_int3: tmp12,
            test_int4: tmp13,
            test_float2: tmp14,
            test_float3: tmp15,
            test_float4: tmp16,
            test_double2: tmp17,
            test_double3: tmp18,
            test_double4: tmp19,
            test_float2x2: tmp20,
            test_float3x3: tmp21,
            test_float4x4: tmp22,
            test_float3x2: tmp23,
            test_double2x2: tmp24,
            test_double3x3: tmp25,
            test_double4x4: tmp26,
            bool_array: tmp27,
            int_array: tmp28,
            float_array: tmp29,
            double_array: tmp30,
            string_array: tmp31,
            color_array: tmp32,
            bool2_array_of_vectors: tmp33,
            bool3_array_of_vectors: tmp34,
            bool4_array_of_vectors: tmp35,
            int2_array_of_vectors: tmp36,
            int3_array_of_vectors: tmp37,
            int4_array_of_vectors: tmp38,
            float2_array_of_vectors: tmp39,
            float3_array_of_vectors: tmp40,
            float4_array_of_vectors: tmp41,
            double2_array_of_vectors: tmp42,
            double3_array_of_vectors: tmp43,
            double4_array_of_vectors: tmp44,
            file_tex: tmp45,
            perlin_parm: tmp46,
            test_struct: tmp47,
            normal: tmp48);
